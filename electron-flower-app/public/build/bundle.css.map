{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Plant.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { plants } from './plants'\n\timport Plant from './Plant.svelte'\n\n\tlet needwater = []\n\tlet garden = [] \n\n\t//make a copy of the plants in the .js file \n\tlet allPlants = plants\n\n\t//make an array with weekdays\n\tconst days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n\n\t//set a variable, day, to the correct index in the weekdays array \n\tlet day = days[new Date().getDay()]\n\n\t//make a function that checks whether plants need water\n\tconst checkPlants = () => {\n\t\t//whenever the day changes (once every 24 hours) \n\t\t//check all plants and set then to need watering if they include the new day \n\t\tif(day != days[new Date().getDay()]){\n\t\t\tday = days[new Date().getDay()]\n\t\t\tconsole.log('new day ', day)\n\t\t\tallPlants.map( p => { if(p.days.includes(day)) p.needwater = true } ) \n\t\t}\n\t\t//needwater includes all plants that have not been watered (even if it was on another day)\n\t\tneedwater = allPlants.filter( p => p.needwater)\n\t\t//garden includes all plants that don't need water\n\t\tgarden = allPlants.filter( p => !p.needwater)\n\t}\n\n\t//check the plants current status on start\n\tcheckPlants()\n \n\t//set an interval that check plants every minute\n\tsetInterval(checkPlants, 20000)\n\n\t//when a plant has been watered, we can remove it \n\tconst remove = plant => {\n\t\tplant.needwater = false\n\t\tneedwater = needwater.filter( p => p.name != plant.name)\n\t\tgarden = [plant, ...garden]\n\t}\n\n\n</script>\n\n<h1>{day}</h1>\n<main>\n<div class=\"needs\">\n\t{#each needwater as plant}\n\t\t<Plant {plant} {remove} {day}/>\n\t{:else}\n\t\t<h3>No watering needed</h3>\n\t{/each}\n</div>\n<div class=\"garden\">\n\t{#each garden as plant}\n\t\t<Plant {plant} {day} />\n\t{:else}\n\t\t<h3>No plants</h3>\n\t{/each}\n</div>\n\n</main>\n\n<style>\n\tmain{\n\t\tdisplay:grid;\n\t\tgrid-template-rows: 1fr 1fr;\n\t\tgap:2rem;\n\t}\n\t.needs, .garden{\n\t\tdisplay:grid;\n\t\tgrid-auto-flow:column;\n\t\tjustify-content:center;\n\t\tgap:1rem; \n\t}\n</style>",
    "<script>\n    import { fade } from 'svelte/transition'\n    export let plant\n    export let remove = ''\n    export let day = ''\n</script>\n\n<div transition:fade class=\"plant {plant.needwater && 'need'} {plant.needwater && !plant.days.includes(day) && 'bad'}\">\n    <h3>{plant.name}</h3>\n    {#each plant.days as day}\n        <li>{day}</li>\n    {/each}\n    {#if plant.needwater}\n        <button on:click={ () => remove(plant)}>done</button>\n    {/if}\n</div>\n\n<style>\n    .plant{\n        height:11rem;\n        width:8rem;\n        padding:1rem;\n        border:1px solid #ddd;\n        border-radius:1rem;\n        position:relative;\n    }\n    button{\n        position:absolute;\n        background:none;\n        bottom:.2rem;\n        right:.4rem;\n    }\n    .need{\n        background-color:#ddd;\n    }\n    .bad{\n        background-color:salmon;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AAmEC,mBAAI,CAAC,AACJ,QAAQ,IAAI,CACZ,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAC3B,IAAI,IAAI,AACT,CAAC,AACD,qBAAM,CAAE,sBAAO,CAAC,AACf,QAAQ,IAAI,CACZ,eAAe,MAAM,CACrB,gBAAgB,MAAM,CACtB,IAAI,IAAI,AACT,CAAC;AC3DE,oBAAM,CAAC,AACH,OAAO,KAAK,CACZ,MAAM,IAAI,CACV,QAAQ,IAAI,CACZ,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CACrB,cAAc,IAAI,CAClB,SAAS,QAAQ,AACrB,CAAC,AACD,oBAAM,CAAC,AACH,SAAS,QAAQ,CACjB,WAAW,IAAI,CACf,OAAO,KAAK,CACZ,MAAM,KAAK,AACf,CAAC,AACD,mBAAK,CAAC,AACF,iBAAiB,IAAI,AACzB,CAAC,AACD,kBAAI,CAAC,AACD,iBAAiB,MAAM,AAC3B,CAAC"
}